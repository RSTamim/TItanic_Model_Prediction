# -*- coding: utf-8 -*-
"""titanic-model-prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1xEoZpfg0pfTAtCKoxYdaryzO-d4hvuR8
"""

# This Python 3 environment comes with many helpful analytics libraries installed
# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python
# For example, here's several helpful packages to load

import numpy as np # linear algebra
import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)

# Input data files are available in the read-only "../input/" directory
# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory

import os
for dirname, _, filenames in os.walk('/kaggle/input'):
    for filename in filenames:
        print(os.path.join(dirname, filename))

# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using "Save & Run All" 
# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session

qesem=pd.read_csv("../input/titanic/train.csv")
qesem.head()

features = ["Pclass", "Sex", "SibSp", "Parch"]
X=qesem[features]

y=qesem.Survived

X=pd.get_dummies(X)

from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test= train_test_split(X,y, test_size=0.25)

"""# **train model**

"""

from sklearn.ensemble import RandomForestClassifier

model=RandomForestClassifier(n_estimators=100, 
                             max_depth=5, 
                             random_state=1)

model.fit(X_train,y_train)

"""# evaluate model"""

model.score(X_test,y_test)

"""# Prediction"""

prediction=model.predict(X)

prediction

output=pd.DataFrame({'PassengerId': qesem.PassengerId,'Survived': prediction})

output.head()

output.to_csv('my_first_model.csv', index=False)

test=pd.read_csv("../input/titanic/test.csv")

Xa_test = pd.get_dummies(test[features])

Xa_test_result= model.predict(Xa_test)

output = pd.DataFrame({'PassengerId': test.PassengerId, 'Survived': Xa_test_result})
output.to_csv('my_submission.csv', index=False)
print("Your submission was successfully saved!")